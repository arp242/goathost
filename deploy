#!/bin/sh
#
# Deploy to a server. Assumes cwd is of the to-be-deployed project.
#
# This only copies the binary; you will still need to restart the app.
#

set -euC

name=$(basename "$(pwd)")

if [ ! -d "./cmd/$name" ]; then
	echo >&2 "./cmd/$name doesn't exist"
	exit 1
fi

# Build
go generate ./...
ver="$(git log -n1 --format='%h_%cI')"
req="$(ls -1 ./db/migrate/ | tail -n1)"
req="${req%.*}"
CC=musl-gcc go build -v \
	-ldflags "-X main.version=$ver -X main.requiredVersion=$req" \
	"./cmd/$name"
strip "$name"
upx -qqq "$name"

# Test
go test -race -cover ./...

# Send to servers.
for s in 139.162.153.248; do
	# Make backup so we can easily roll back if needed.
	# TODO: cleanup older files.
	ssh -p9012 "$s" cp "$name" "$name.$(date +%Y-%m-%dT%H:%M:%S)"

	scp -P9012 "$name" "scp://$s/"
	suml=$(sha256sum "$name")
	sumr=$(ssh -p9012 "$s" sha256sum "$name")
	rm "$name"

	if [ "$suml" != "$sumr" ]; then
		echo >&2 "checksums don't match:"
		echo >&2 "  local:  $suml"
		echo >&2 "  remote: $sumr"
		exit 1
	fi
done

exit 0
