#!/bin/sh
#
# Deploy to a server. Assumes cwd is of the to-be-deployed project.
#
# This only copies the binary; you will still need to restart the app.
#

set -euC

name=$(basename "$PWD")
if [ ! -d "./cmd/$name" ]; then
	echo >&2 "./cmd/$name doesn't exist"
	exit 1
fi

link="y"
quick=0
case "${1:-}" in
	"")     ;;
	"beta")  link="" ;;
	"quick") quick=1 ;;
	*)      echo "unknown flag: $1"; exit 5 ;;
esac

# Build
[ "$quick" -eq 0 ] && go generate ./...

v=$(git tag -l --points-at "$(git log -n1 --format='%H')")
if [ -z "$v" ]; then
	v=$(git log -n1 --format='%h_%cI')
fi

#CC=musl-gcc \
CGO_ENABLED=0 \
go build -trimpath \
	-ldflags "-X zgo.at/goatcounter/v2.Version=$v" \
	"./cmd/$name"
upx -qqq "$name" || echo >&2 "upx not in PATH: skipping compress stage"

# Test
if [ "$quick" -eq 0 ]; then
	#go run ./cmd/check ./...
	go test -race ./...
	go test -race -tags testpg ./...
fi

# Send to servers.
for s in ${SERVERS:-gc-sg}; do
	ssh -p9012 "$s" mkdir -p "/home/$name/bin"

	file="/home/$name/bin/$name.$(date +%Y-%m-%dT%H:%M:%S).$(git log -n1 --format='%h')"
	scp -P9012 "$name" "scp://$s/$file"

	suml=$(sha256sum "$name")
	sumr=$(ssh -p9012 "$s" sha256sum "$file")
	rm "$name"
	if [ "${suml%% *}" != "${sumr%% *}" ]; then
		echo >&2 "checksums don't match:"
		echo >&2 "  local:  $suml"
		echo >&2 "  remote: $sumr"
		exit 1
	fi

	if [ -n "$link" ]; then
		ssh -p9012 "$s" ln -sf '$(readlink -f '"$file"')' "/home/$name/bin/$name"
		# ssh -p9012 "$s" ls -1t "/home/$name/bin/$name"'*' '|' tail -n +10 '|' xargs rm
	else
		echo "$file"
	fi
done

exit 0
